{"version":3,"sources":["Components/Main/Main.module.css","Components/CurrentCourse.module.css","UI/MyButton/MyButton.module.css","UI/MyButton/MyButton.jsx","Components/CurrentCourse.jsx","UI/MyInput/MyInput.jsx","Components/Main/Main.jsx","API/API.js","Redux/Reducers/exchangeReducer.js","API/AsyncActions/getCourse.js","App.js","reportWebVitals.js","Redux/store/index.js","Redux/store/store.js","index.js"],"names":["module","exports","MyButton","children","myClass","props","className","classes","myBtn","join","CurrentCourse","courseTitle","currentCurrency","currency","button","onClick","history","goBack","MyInput","type","id","Main","inputValue","setInputValue","getCurrentCourse","result","mainTitle","exchangeBlock","placeholder","onChange","e","target","value","onKeyDown","code","mainResult","to","baseUrl","EXCHANGE_CURRENCY","initialState","count","getCourse","dispatch","axios","get","then","response","payload","data","rates","RUB","catch","err","console","log","App","useState","getRes","setGetRes","useDispatch","useSelector","state","exchangeReducer","useEffect","numValue","replace","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de58a446.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Main_button__1CguC\",\"exchangeBlock\":\"Main_exchangeBlock__4jye9\",\"mainTitle\":\"Main_mainTitle__2hncg\",\"mainResult\":\"Main_mainResult__2eJEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CurrentCourse_button__1VqnK\",\"courseTitle\":\"CurrentCourse_courseTitle__3xnbB\",\"currentCurrency\":\"CurrentCourse_currentCurrency__1r_Q9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__xcxkS\"};","import React from 'react';\r\nimport classes from './MyButton.module.css'\r\n\r\nconst MyButton = ({children, myClass, ...props}) => {\r\n    return (\r\n        <button {...props} className={[myClass, classes.myBtn].join(' ')}>{children}</button>\r\n    )\r\n\r\n\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport MyButton from \"../UI/MyButton/MyButton\";\r\nimport classes from './CurrentCourse.module.css'\r\n\r\nconst CurrentCourse = ({...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={classes.courseTitle}>Current exchange rate:</h2>\r\n            <div className={classes.currentCurrency}>\r\n                <div>EUR</div>\r\n                <div>= {props.currency}</div>\r\n                <div> RUB</div>\r\n\r\n            </div>\r\n            <MyButton myClass={classes.button} onClick={() => props.history.goBack()}>\r\n                Go back\r\n            </MyButton>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentCourse;","import React from 'react';\r\n\r\nconst MyInput = ({...props}) => {\r\n    return <input type=\"text\" className=\"form-control\" id=\"usr\" {...props}/>\r\n\r\n\r\n\r\n};\r\n\r\nexport default MyInput;","import React from 'react';\r\nimport MyInput from \"../../UI/MyInput/MyInput\";\r\nimport MyButton from \"../../UI/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Main.module.css'\r\n\r\nconst Main = ({inputValue, setInputValue, getCurrentCourse, result}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={classes.mainTitle}>Currency converter â‚¬ ðŸ‘‰ â‚½</h1>\r\n            <div className={classes.exchangeBlock}>\r\n                <MyInput\r\n                    placeholder={'Amount in EUR (15 EUR in RUB or 15)'}\r\n                    onChange={e => setInputValue(e.target.value)}\r\n                    value={inputValue}\r\n                    onKeyDown={e => e.code === 'Enter' ? getCurrentCourse() : null}\r\n                />\r\n                <MyButton onClick={() => getCurrentCourse()} myClass={classes.button}>\r\n                    Convert\r\n                </MyButton>\r\n            </div>\r\n\r\n            <div className={classes.mainResult}>= {result} RUB</div>\r\n\r\n            <NavLink to='/test'>\r\n                <MyButton>\r\n                    Current rate\r\n                </MyButton>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","const apiKey  = '6c9b2a3f98c838445b926f7c5349a15a'\r\nexport const baseUrl = `http://api.exchangeratesapi.io/v1/latest?access_key=${apiKey}`\r\n\r\n\r\n","const EXCHANGE_CURRENCY = 'EXCHANGE-CURRENCY'\r\n\r\nconst initialState = {\r\n    count: 0\r\n}\r\n\r\nexport const exchangeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case EXCHANGE_CURRENCY:\r\n            return {...state, count: state.count + action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const exchangeReducerAc = payload => ({type: EXCHANGE_CURRENCY, payload})\r\n\r\n// const CURRENCY_CONVERSION = 'CURRENCY-CONVERSION'","import axios from \"axios\";\r\nimport {baseUrl} from \"../API\";\r\nimport {exchangeReducerAc} from \"../../Redux/Reducers/exchangeReducer\";\r\n\r\n\r\nexport const getCourse = () => {\r\n    return function (dispatch) {\r\n        axios.get(baseUrl)\r\n            .then(response => dispatch(exchangeReducerAc(response.data.rates.RUB)))\r\n            .catch(err => console.log(err, 'Error'))\r\n    }\r\n}\r\n\r\n// .then(response => setState(response.data.rates.RUB))\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport CurrentCourse from \"./Components/CurrentCourse\";\nimport Main from \"./Components/Main/Main\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getCourse} from \"./API/AsyncActions/getCourse\";\n\n\nfunction App() {\n\n    const [inputValue, setInputValue] = useState('')\n    const [getRes, setGetRes] = useState(0)\n\n    // Redux\n    const dispatch = useDispatch()\n    const currency = useSelector(state => state.exchangeReducer.count)\n\n    useEffect(() => {\n        dispatch(getCourse())\n    }, [dispatch])\n\n    const getCurrentCourse = () => {\n        const numValue = inputValue.replace(/[^0-9]/g, \"\")\n        return setGetRes(numValue * currency)\n        // if(inputValue.split(' ').includes('rub')) {\n        //     return setGetRes(numValue * currency)\n        // }\n        // else alert('Enter RUB/rub value!')\n    }\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className=\"App__wrapper\">\n                    <Switch>\n                        <Route path='/main' render={() =>\n                            <Main\n                                inputValue={inputValue}\n                                setInputValue={setInputValue}\n                                result={getRes}\n                                getCurrentCourse={getCurrentCourse}\n                            />}\n                        />\n                        <Route exact path='/test' render={props =>\n                            <CurrentCourse\n                                getRes={getRes}\n                                {...props}\n                                currency={currency}\n                            />}\n                        />\n                        <Redirect to='/main'/>\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport {exchangeReducer} from \"../Reducers/exchangeReducer\";\r\n\r\nexport const rootReducer = combineReducers({exchangeReducer})","import {applyMiddleware, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport {rootReducer} from \"./index\";\r\n\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/store/store\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}